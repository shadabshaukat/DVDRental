-- select 'drop table '||table_name||' cascade constraints;' from user_tables;
-- drop table FILM cascade constraints;
-- drop table FILM_ACTOR cascade constraints;
-- drop table FILM_CATEGORY cascade constraints;
-- drop table INVENTORY cascade constraints;
-- drop table LANGUAGE cascade constraints;
-- drop table PAYMENT cascade constraints;
-- drop table RENTAL cascade constraints;
-- drop table STAFF cascade constraints;
-- drop table STORE cascade constraints;
-- drop table ACTOR cascade constraints;
-- drop table ADDRESS cascade constraints;
-- drop table CATEGORY cascade constraints;
-- drop table CITY cascade constraints;
-- drop table COUNTRY cascade constraints;
-- drop table CUSTOMER cascade constraints;


-- Create table: actor
CREATE TABLE actor (
    actor_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR2(45) NOT NULL,
    last_name VARCHAR2(45) NOT NULL,
    last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Create table: address
CREATE TABLE address (
    address_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    address VARCHAR2(50) NOT NULL,
    address2 VARCHAR2(50),
    district VARCHAR2(20) NOT NULL,
    city_id NUMBER NOT NULL,
    postal_code VARCHAR2(10),
    phone VARCHAR2(20) NOT NULL,
    last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Create table: category
CREATE TABLE category (
    category_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(25) NOT NULL,
    last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Create table: city
CREATE TABLE city (
    city_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    city VARCHAR2(50) NOT NULL,
    country_id NUMBER NOT NULL,
    last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Create table: country
CREATE TABLE country (
    country_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    country VARCHAR2(50) NOT NULL,
    last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Create table: customer
CREATE TABLE customer (
    customer_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    store_id NUMBER NOT NULL,
    first_name VARCHAR2(45) NOT NULL,
    last_name VARCHAR2(45) NOT NULL,
    email VARCHAR2(50),
    address_id NUMBER NOT NULL,
    active NUMBER(1) DEFAULT 1 NOT NULL,
    create_date DATE DEFAULT SYSDATE NOT NULL,
    last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    activebool NUMBER(1)
);

-- Create table: film
CREATE TABLE film (
    film_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR2(255) NOT NULL,
    description CLOB,
    release_year NUMBER(4),
    language_id NUMBER NOT NULL,
    rental_duration NUMBER DEFAULT 3 NOT NULL,
    rental_rate NUMBER(4,2) DEFAULT 4.99 NOT NULL,
    length NUMBER,
    replacement_cost NUMBER(5,2) DEFAULT 19.99 NOT NULL,
    rating VARCHAR2(5) DEFAULT 'G',
    last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    special_features CLOB,
    fulltext CLOB
);

-- Create table: film_actor
CREATE TABLE film_actor (
    actor_id NUMBER NOT NULL,
    film_id NUMBER NOT NULL,
    last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY (actor_id, film_id)
);

-- Create table: film_category
CREATE TABLE film_category (
    film_id NUMBER NOT NULL,
    category_id NUMBER NOT NULL,
    last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PRIMARY KEY (film_id, category_id)
);

-- Create table: inventory
CREATE TABLE inventory (
    inventory_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id NUMBER NOT NULL,
    store_id NUMBER NOT NULL,
    last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Create table: language
CREATE TABLE language (
    language_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name CHAR(20) NOT NULL,
    last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Create table: payment
CREATE TABLE payment (
    payment_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    customer_id NUMBER NOT NULL,
    staff_id NUMBER NOT NULL,
    rental_id NUMBER NOT NULL,
    amount NUMBER(5,2) NOT NULL,
    payment_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Create table: rental
CREATE TABLE rental (
    rental_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    rental_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    inventory_id NUMBER NOT NULL,
    customer_id NUMBER NOT NULL,
    return_date TIMESTAMP,
    staff_id NUMBER NOT NULL,
    last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);

-- Create table: staff
CREATE TABLE staff (
    staff_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name VARCHAR2(45) NOT NULL,
    last_name VARCHAR2(45) NOT NULL,
    address_id NUMBER NOT NULL,
    email VARCHAR2(50),
    store_id NUMBER NOT NULL,
    active NUMBER(1) DEFAULT 1 NOT NULL,
    username VARCHAR2(16) NOT NULL,
    password VARCHAR2(40),
    last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    picture BLOB
);

-- Create table: store
CREATE TABLE store (
    store_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    manager_staff_id NUMBER NOT NULL,
    address_id NUMBER NOT NULL,
    last_update TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);


CREATE OR REPLACE PROCEDURE SampleInsertActor(n IN NUMBER) 
IS
BEGIN
    FOR i IN 1..n LOOP
        INSERT INTO actor (first_name, last_name, last_update)
        VALUES (
            CHR(FLOOR(DBMS_RANDOM.VALUE(65, 91))) || CHR(FLOOR(DBMS_RANDOM.VALUE(65, 91))),
            CHR(FLOOR(DBMS_RANDOM.VALUE(65, 91))) || CHR(FLOOR(DBMS_RANDOM.VALUE(65, 91))),
            SYSTIMESTAMP
        );
    END LOOP;
    COMMIT;
END;
/

-- Example to insert 1000 random records
BEGIN
    SampleInsertActor(1000);
END;
/
